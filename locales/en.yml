en:
  errors:
    attributes:
      language:
        inclusion: "must be one of: en, de"
      log_level:
        inclusion: "must be one of: debug, info, warn, error"
      openpgp_header_preference:
        inclusion: "must be one of: sign, encrypt, signencrypt, unprotected, none"
      internal_footer:
        invalid: "includes non-printable characters"
      public_footer:
        invalid: "includes non-printable characters"
    invalid_email: "is not a valid email address"
    invalid_fingerprint: "is not a valid OpenPGP-fingerprint"
    list_fingerprint_missing: "List has no fingerprint configured, cannot run! (In `%{listdir}`.)"
    list_key_missing: "List-key is missing in keyring, cannot run! (In `%{listdir}`.)"
    list_secret_key_missing: "Secret key of list is missing in keyring, cannot run! (In `%{listdir}`.)"
    list_admins_missing: "List has no admins configured, cannot run! (In `%{listdir}`.)"
    fatalerror: |
      A fatal error happened. Administrators have been notified.
      Please try again later.
    signoff: |


      Kind regards,
      Your Schleuder system.
    decryption_failed: |
      Decrypting your message failed.
      Messages to this address must be encrypted with the following key:

      %{key}

      To receive it send an email to
      <%{email}>.
    message_unsigned: Messages to this address must be OpenPGP-signed.
    message_signature_unknown: |
      Messages to this address must be OpenPGP-signed by the key that is configured
      for your subscription. If you don't know which one that is, ask an administrator
      of this list. You can contact the administrators by sending a message to
      <%{owner_email}>
      (preferably encrypt it with this addresses' public key:
      %{list_fingerprint}).
    message_unencrypted: Messages to this address must be encrypted conforming to OpenPGP.
    message_unauthenticated: Messages to this address must be encrypted and signed by the key associated with a subscribed address.
    message_sender_not_subscribed: Only subscribed addresses may send messages to this address.
    message_not_from_admin: Only admins may send messages to this address.
    message_empty: |
      Your message was found empty and wasn't passed on to the list.

      In case you only sent keywords please note that administrative keywords must be sent to the "request"-address (<%{request_address}>) in order to be respected.
    no_linebreaks: "must not include line-breaks"
    list_not_found: "Error: No list found with this address: '%{email}'."
    invalid_characters: "contains invalid characters"
    listdir_problem:
      message: "There's a problem with the list-directory: '%{dir}' %{problem}."
      not_existing: does not exist
      not_a_directory: is not a directory
      not_empty: is not empty
      not_writable: is not writable
      not_readable: is not readable
    keyword_admin_only: The keyword '%{keyword}' may only be used by list-admin.
    unknown_keyword: The given keyword '%{keyword}' is unknown. Please check its spelling or the documentation.
    keyword_x_stop_missing: "Your message lacked the keyword 'X-STOP'. If you use keywords in a message, you must indicate with 'X-STOP' where to stop looking for further keywords."
    key_generation_failed: Generating the OpenPGP key pair for %{listname} failed for unknown reasons. Please check the list-directory ('%{listdir}') and the log-files.
    key_adduid_failed: "Adding a user-ID to the OpenPGP key failed with this message:\n%{errmsg}"
    too_many_keys: "Error: In %{listdir} there's more than one matching OpenPGP-key for %{listname}. Please delete all but one."
    loading_list_settings_failed: "%{config_file} could not be parsed, please check its formatting to be valid YAML."
    message_too_big: "Your message was too big. Allowed are up to %{allowed_size}KB."
    must_be_boolean: "must be true or false"
    must_be_greater_than_zero: "must be a number greater than zero"
    not_pgp_mime: "Message was not encrypted in the pgp/mime-format."
    delivery_error: "The following error occurred while sending a message to %{email}: %{error}"
    no_match_for: "No match found for %{input}"
    too_many_matching_keys: |
      Too many matching keys for '%{input}':
      %{key_strings}
  keyword_handlers:
    handler_failed: Running keyword '%{keyword}' caused an unknown error. System-admins have been notified.
    keyword_admin_notify:
      request: |
        %{sender} sent this keyword:

        %{keyword}: %{arguments}


        ...and received this response:

        %{response}
      list: |
        %{sender} sent this keyword to the list:

        %{keyword}: %{arguments}
    key_management:
      key_not_found: "Error: No key found with this fingerprint: '%{fingerprint}'."
      deleted: |
        This key was deleted:
        %{key_string}
      not_deletable: |
        This key may not be deleted:
        %{key_string}
      no_imports: In the message you sent us, no keys could be found. :(
      key_import_status:
        imported: |
          This key was newly added:
          %{key_summary}
        updated: |
          This key was updated:
          %{key_summary}
        unchanged: |
          This key was not changed:
          %{key_summary}
        error: |
          The key with this fingerprint could not be added due to an unknown error:
          %{fingerprint} 
      matching_keys_intro: All keys from the list's keyring matching '%{input}' are attached to this message.
      delete_key_requires_arguments: |
        Error: You did not send any arguments for the keyword 'DELETE-KEY'.

        One is required, more are optional, e.g.:
        X-DELETE-KEY: 0xB3D190D5235C74E1907EACFE898F2C91E2E6E1F3

        Or, to delete multiple keys at once:
        X-DELETE-KEY: 0xB3D190D5235C74E1907EACFE898F2C91E2E6E1F3 a-subscription@hostname

        The matching keys will be deleted only if the argument matches them distinctly.
      fetch_key_requires_arguments: |
        Error: You did not send any arguments for the keyword 'FETCH-KEY'.

        One is required, more are optional. Each argument can be an URL to fetch via HTTP, or a string to look up at the OpenPGP-keyservers.
        E.g., to fetch a key by fingerprint from the keyserver:
        X-FETCH-KEY: 0xB3D190D5235C74E1907EACFE898F2C91E2E6E1F3

        Or, to fetch two keys by email-address from the keyserver:
        X-FETCH-KEY: a-subscription@hostname anotherone@example.org

        Or, to fetch a key keys by URL:
        X-FETCH-KEY: https://example.org/keys/mykey.asc
      no_content_found: Your message did not contain any attachments nor text content. Therefore no key could be imported.
    resend:
      not_resent_no_keys: Resending to <%{email}> failed (%{all_keys} keys found, of which %{usable_keys} can be used. Unencrypted sending not allowed).
      not_resent_encrypted_no_keys: Resending as encrypted email to <%{email}> failed (%{all_keys} keys found, of which %{usable_keys} can be used).
      aborted: Resending to <%{email}> aborted due to other errors.
      encrypted_to: Encrypted to
      unencrypted_to: Unencrypted to
      invalid_recipient: "Invalid email-address for resending: %{address}"
    subscription_management:
      forbidden: "Error: You're not allowed to unsubscribe %{email}."
      is_not_subscribed: "%{email} is not subscribed."
      unsubscribed: "%{email} has been unsubscribed."
      unsubscribing_failed: |
        Unsubscribing %{email} failed:
        %{errors}
      cannot_unsubscribe_last_admin: |
        %{email} is the only admin for this list, thus it can not be unsubscribed.
      subscribed: |
        %{email} has been subscribed with these attributes:

        Fingerprint: %{fingerprint}
        Admin? %{admin}
        Email-delivery enabled? %{delivery_enabled}
      subscribing_failed: |
        Subscribing %{email} failed:

        %{errors}.
      list_of_subscriptions: "Subscriptions:\n"
      set_fingerprint_only_self: Only admins may set fingerprints of subscriptions other than their own.
      fingerprint_set: Fingerprint for %{email} set to %{fingerprint}.
      setting_fingerprint_failed: |
        Setting fingerprint for %{email} to %{fingerprint} failed:
        %{errors}.
      set_fingerprint_requires_valid_fingerprint: |
        You did not send a valid fingerprint for the keyword 'SET-FINGERPRINT'

        The following value was detected: %{fingerprint}

        One or two are required, e.g.:
        X-SET-FINGERPRINT: 0xB3D190D5235C74E1907EACFE898F2C91E2E6E1F3

        or (as an admin):
        X-SET-FINGERPRINT: subscription2@hostname 0xB3D190D5235C74E1907EACFE898F2C91E2E6E1F3

        While the fingerprint must be passed in the full length (40 characters). Optionally prefixed with 0x.

        To remove a fingerprint you can use the keyword 'UNSET-FINGERPRINT'
      set_fingerprint_requires_arguments: |
        Error: You did not send any arguments for the keyword 'SET-FINGERPRINT'.

        One or two are required, e.g.:
        X-SET-FINGERPRINT: 0xB3D190D5235C74E1907EACFE898F2C91E2E6E1F3

        or (as an admin):
        X-SET-FINGERPRINT: subscription2@hostname 0xB3D190D5235C74E1907EACFE898F2C91E2E6E1F3

        To remove a fingerprint you can use the keyword 'UNSET-FINGERPRINT'
      unset_fingerprint_only_self: Only admins may remove fingerprints of subscriptions other than their own.
      fingerprint_unset: Fingerprint for %{email} removed.
      unsetting_fingerprint_failed: |
        Removing fingerprint for %{email} failed:
        %{errors}.
      unset_fingerprint_requires_arguments: |
        Error: You did not send any arguments for the keyword 'UNSET-FINGERPRINT'

        One value is required, e.g.:
        X-UNSET-FINGERPRINT: subscription2@hostname

        As an admin to unset your own fingerprint you must additionally pass the argument force. E.g.:
        X-UNSET-FINGERPRINT: adminsubscription2@hostname force
      subscribe_requires_arguments: |
        Error: You did not send any arguments for the keyword 'SUBSCRIBE'.

        At least one argument is required, three more are optional. E.g.:
        X-SUBSCRIBE: new-subscription@hostname

        Or, defining the key to use for the new subscription:
        X-SUBSCRIBE: new-subscription@hostname 0xB3D190D5235C74E1907EACFE898F2C91E2E6E1F3

        Or, defining the key to use, and setting this subscription to be an admin:
        X-SUBSCRIBE: new-subscription@hostname 0xB3D190D5235C74E1907EACFE898F2C91E2E6E1F3 true

        Or, defining the key to use, setting this subscription as admin, and disabling the delivery of list-emails to this subscription:
        X-SUBSCRIBE: new-subscription@hostname 0xB3D190D5235C74E1907EACFE898F2C91E2E6E1F3 true false

        If you omit the optional arguments, the subscription has no key assigned, is not an admin, and has the delivery of list-emails enabled.
    sign_this:
      signatures_attached: Find the signatures attached.
      no_content_found: Your message did not contain any attachments nor text content. Therefore nothing could be signed.
    list_management:
      no_logfile: No logfile could be found for %{listname}. (This might be caused by a high log-level and the absence of errors.)
      logfile_attached: The logfile for %{listname} is attached.
  list_public_key_subject: Key for this address
  list_public_key_attached: Find the key for this address attached.
  no_output_result: Your message resulted in no output.
  owner_forward_prefix: The following message was received for the list-owners.
  no_keywords_error: Your message didn't contain any keywords, thus there was nothing to do.
  missing_listname_keyword_error: Your message did not contain the required "X-LIST-NAME" keyword and was rejected.
  wrong_listname_keyword_error: Your message contained an incorrect "X-LIST-NAME" keyword. The keyword argument must match the email address of this list.
  bounces_drop_all: The attached message should have been bounced but was dropped without further notice because the list's configuration defines that no message should ever be bounced.
  bounces_drop_on_headers: "The attached message should have been bounced but was dropped without further notice because it matched this header-line: %{key}: %{value}"
  bounces_notify_admins: "The attached message was bounced with the following notice:"
  notice: Notice
  incoming_message: Incoming message
  forward_all_incoming_to_admins: The attached message was received.
  forward_automated_message_to_admins: Attached is a message that probably was sent by a machine, not a human. Therefore it has not been passed on to the list, but only to you, the admins.
  automated_message_subject: Automated message received
  check_keys: Keys check
  check_keys_intro: "Please take care of these keys for list %{email}."
  key_expires: |
    This key expires in %{days} days:
    %{key_summary}
  key_unusable: |
    This key is %{usability_issue}:
    %{key_summary}
  missed_message_due_to_unusable_key: "You missed an email from %{list_email} because your subscription isn't associated with a (usable) OpenPGP key. Please fix this."
  refresh_keys: Keys update
  refresh_keys_intro: "Refreshing all keys from the keyring of list %{email} resulted in this:"
  key_updated: |
    This key was updated (%{states}):
    %{key_summary}
  key_fetched: |
    This key was fetched (%{states}):
    %{key_summary}
  import_states:
    unchanged: unchanged
    new_key: new key
    new_uids: new user-IDs
    new_subkeys: new subkeys
    new_signatures: new signatures
  fetch_key:
    invalid_input: "Invalid input. Allowed are: URLs, OpenPGP-fingerprints, or email-addresses."
  pseudoheaders:
    scrubbed_message: This message included invalid characters, which might have been removed to be able to process the message properly.
    stripped_html_from_multialt: This message included an alternating HTML-part that contained PGP-data. The HTML-part was removed to enable parsing the message more properly.
    stripped_html_from_multialt_with_keywords: This message included keywords and an alternating HTML-part. The HTML-part was removed to prevent the disclosure of these keywords to third parties.
  signature_states:
    unknown: "Unknown signature by unknown key 0x%{fingerprint}"
    unsigned: "Unsigned"
  encryption_states:
    encrypted: "Encrypted"
    unencrypted: "Unencrypted"
  header_munging: "%{from} via %{list} <%{list_address}>"

  activerecord:
    errors:
      models:
        schleuder/subscription:
          attributes:
            email:
              taken: 'is already subscribed'
