---
stages:
  - test
  - static

variables:
  IMAGE_REGISTRY: $CI_REGISTRY/schleuder/schleuder-ci-images

# Jobs that start with a period are disabled
# This is just a template, to be used further below in the individual job definitions
.limit_non_release_branches: &limit_non_release_branches
  except:
    - /^master/
    - /^release.*/
    - tags 
  
.test_ruby: &test_ruby
  script:
    - eatmydata bundle install --jobs $(nproc)
    - SCHLEUDER_ENV=test SCHLEUDER_CONFIG=spec/schleuder.yml eatmydata bundle exec rake db:init
    - CHECK_CODE_COVERAGE=true eatmydata bundle exec rspec

ruby:2.5:
  image: $IMAGE_REGISTRY:schleuder-ruby2.5
  <<: *test_ruby
ruby:2.6:
  image: $IMAGE_REGISTRY:schleuder-ruby2.6
  <<: *test_ruby
  artifacts:
    expire_in: 1 day
    paths:
      - coverage
ruby:2.7:
  image: $IMAGE_REGISTRY:schleuder-ruby2.7
  <<: *test_ruby
  
ruby:3.0:
  image: $IMAGE_REGISTRY:schleuder-ruby3.0
  <<: *test_ruby
  
changelog:
  image: $IMAGE_REGISTRY:debian-generic
  script:
    - source <(./utils/ci/get-target-branch.rb)
    # Ensure we work with the latest state
    - git fetch origin $target_branch:$target_branch
    # Compare the target and current branch using their common ancestors
    # to check if the changelog was edited
    - if git diff --exit-code --quiet $target_branch...HEAD -- CHANGELOG.md; then
        echo "No CHANGELOG edit found, please verify manually";
        exit 1;
      fi
  stage: static
  allow_failure: true
  <<: *limit_non_release_branches

codespell:
  image: $IMAGE_REGISTRY:debian-generic
  script:
    # Run codespell to check for spelling errors, using a config with ignored
    # words, skipping files (German translations) and the code coverage dir
    # leading to false positives, ignoring warnings about binary files and,
    # finally, checking file names as well.
    - codespell -I utils/ci/codespell/ignored_words.txt -S ./.git,coverage,de.yml,fixtures -q 2 -f
  stage: static
  <<: *limit_non_release_branches

code-coverage:
  image: $IMAGE_REGISTRY:debian-generic 
  script:
    - unset HISTFILE
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - printf "
      |1|ZfxGVbfwfCHlaURlet/V6y+2gjg=|/X7OweXQUnXZnGSKkvF/IpVz4n4= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPJx38PfGvaHtkSsHptiHoIQxlI3Yf0cskPNTwAQnY14\n
      |1|8YPsezXF2SYQ7rq9U5TbDnMsVjo=|SJOodZB+8j+dO+l6YTdZ7+44XLw= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPJx38PfGvaHtkSsHptiHoIQxlI3Yf0cskPNTwAQnY14
      " > ~/.ssh/known_hosts
    # Unfortunately, variable expansion doesn't work completely in
    # GitLab. Therefore, a bit code duplication in the following code.
    - DEPLOY_SLUG=www/$DEPLOY_BASE/$CI_PROJECT_NAME/$CI_COMMIT_REF_SLUG
    - export DEPLOY_SLUG
    - lftp -e "mkdir -fp $DEPLOY_SLUG; quit" -u $DEPLOY_USER,dummy sftp://$DEPLOY_HOST || /bin/true
    - lftp -e "mirror -eRv -x ^download/ coverage $DEPLOY_SLUG; quit;" -u $DEPLOY_USER,dummy sftp://$DEPLOY_HOST
  environment:
    name: $DEPLOY_BASE/$CI_PROJECT_NAME/$CI_COMMIT_REF_SLUG
    url: https://schleuder.org/$DEPLOY_BASE/$CI_PROJECT_NAME/$CI_COMMIT_REF_SLUG
  only:
    - branches@schleuder/schleuder
  variables:
    DEPLOY_BASE: dev/code-coverage
    GIT_STRATEGY: none
  allow_failure: true
  stage: static
  <<: *limit_non_release_branches

rubocop:
  image: $IMAGE_REGISTRY:debian-generic
  script:
    - rubocop
  stage: static
  <<: *limit_non_release_branches

spec-filenames:
  image: $IMAGE_REGISTRY:debian-generic
  script:
    - cd spec/
    - if [[ -n $(find schleuder schleuder-api-daemon -type f -not -name '*_spec.rb') ]]; then
        echo "spec file(s) found missing trailing '_spec' part, please verify manually";
        exit 1;
      fi
  stage: static
  allow_failure: true
  only:
    changes:
      - spec/schleuder/**/*
      - spec/schleuder-api-daemon/**/*
  <<: *limit_non_release_branches

schema-up-to-date:
  image: $IMAGE_REGISTRY:debian-generic
  script:
    - ruby utils/ci/rails_schema_up_to_date.rb
  stage: static
  allow_failure: true
  only:
    changes:
      - db/*
  <<: *limit_non_release_branches

bundler:audit:
  image: ruby:2.5
  only:
    - schedules
  script:
    - gem install bundler-audit --no-document
    - bundle install --jobs $(nproc) --path vendor
    - bundle-audit update
    - bundle-audit check --ignore CVE-2020-8161 CVE-2020-8165
